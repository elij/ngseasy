#!/bin/bash
###########################################################################################
# Program: ngseasy
# Version 1.0 
# Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)
###########################################################################################

###########################################################################################
## Set version and run date
###########################################################################################
NGSEASYVERSION="1.0"
RUNDATE=`date +"%d%m%y"`

###########################################################################################
## test if docker is intsalled and exit if not
###########################################################################################

command -v docker >/dev/null 2>&1 || { echo -e "Docker not installed.\nAborting." >&2; exit 1; }
DOCKERVERSION=`docker version`
DOCKERINFO=`docker info`
echo -e "\n"[`date`]":[NGSEASY:${NGSEASYVERSION}]:"[Log:START]":[${USER}]:[`uname -a`]" 
echo -e "\n---\nDocker Version\n---\n${DOCKERVERSION}\n---\n"Docker Info"\n---\n${DOCKERINFO}\n---\n"
echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"[Log:START]":[${USER}]:[`uname -a`]"  >> ${HOME}/ngseasy_logs/${USER}.${RUNDATE}.NGSEASY.log
echo -e "\n---\nDocker Version\n---\n${DOCKERVERSION}\n---\n"Docker Info"\n---\n${DOCKERINFO}\n---\n" >> ${HOME}/ngseasy_logs/${USER}.${RUNDATE}.NGSEASY.log

###########################################################################################
## global logging fuction
###########################################################################################

function logger_ngseasy() {
 message=${1}
 mylogfile=${2}
 echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"${message}":[${USER}]:[`uname -a`]" >> ${mylogfile}.log;
 echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"${message}":[${USER}]:[`uname -a`]"
}

###########################################################################################
## global usage
###########################################################################################

function usage_ngseasy() {
    echo "
Program: ngseasy
Version 1.0
Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)

usage:   ngseasy -c <config_file> -d <project_directory> -p 1 -f 1

options:  -c  STRING	configuration file
          -d  STRING	project directory
          -p  BOOLEAN	initiate project. Options: 1 or 0
          -f  BOOLEAN	initiate fastq files. Option 1 or 0
          -h  NULL	show this message 
"
}

###########################################################################################
## check and make ~/ngseasy_logs if needed
############################################################################################

if [[ ! -e  ${HOME}/ngseasy_logs ]]
then
  mkdir ${HOME}/ngseasy_logs
  global_run_logs="${HOME}/ngseasy_logs"
  logger_ngseasy "making ${HOME}/ngseasy_logs" ${HOME}/ngseasy_logs/${RUNDATE}.NGSEASY
else
  logger_ngseasy "${HOME}/ngseasy_logs exists" ${HOME}/ngseasy_logs/${RUNDATE}.NGSEASY
fi

## example config: https://docs.google.com/spreadsheets/d/1VWqmMffkVDnvOtRJGlPqOYzXWnIN_IONXQHDAawaN5Q/edit#gid=0

###########################################################################################
## default options
###########################################################################################

config_tsv=""
project_directory=""
initiate_project=0
set_fastq=0

###########################################################################################
## get options for command line args
###########################################################################################

while  getopts "hc:d:pf" opt
do

  case ${opt} in

   h)
   usage_ngseasy #print help
   exit 0
   ;;

   c)
   config_tsv=${OPTARG}
   echo "-c = ${config_tsv}"
   ;;

   d)
   project_directory=${OPTARG}
   echo "-d = ${project_directory}"
   ;;

   p)
   initiate_project=${OPTARG}
   echo "-p = ${make_dirs}"
   ;;
   
   f)
   set_fastq=${OPTARG}
   echo "-f = ${set_fastq}"
   ;;
   
   
   esac
done

###########################################################################################
## Check options passed in.
###########################################################################################

if test -z "$2"
	then
	usage_ngseasy
	exit 1
fi

###########################################################################################
## check file and directory exist.
###########################################################################################
logger_ngseasy "[ngseasy]:Check if config file [${config_tsv}] exists"
if [[ ! -e "${config_tsv}" ]] 
then
	  usage_ngseasy;
	  logger_ngseasy "[ngseasy]:ERROR config file [${config_tsv}] does not exist\n"
	  exit 1;
fi

###########################################################################################
## Make log file ##
###########################################################################################

if [[ ! -e "${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}.log" ]]
then
	logger_ngseasy "[ngseasy]:Making log file [${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}.log]"
	touch ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}.log
	logger_ngseasy "[ngseasy]:Log file [${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}.log]"
else
	logger_ngseasy "[ngseasy]:Log file [${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}.log]"
fi

############################################################################################
## check Num feilds in  ${config_tsv}
###########################################################################################

logger_ngseasy "[ngseasy_fastqc]:Reading [${config_tsv}] " ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}

numcols=`awk '{ print NF }' ${config_tsv} | sort -g | head -1`

if [[  "$numcols" -lt 22 ]] 
then
    logger_ngseasy "[ngseasy]:ERROR : [${config_tsv}] format issue. Check your file! " ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
    exit 1;
else 
    logger_ngseasy "[ngseasy]:Numcols of [${config_tsv}] ok:[$numcols]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}	     
fi


###########################################################################################
## check ${project_directory} exists.
###########################################################################################
logger_ngseasy "[ngseasy]:Check if project dir [${project_directory}] exists"

if [[ ! -d "${project_directory}" ]]
  then
	  usage_ngseasy;
	  logger_ngseasy "[ngseasy]:ERROR : ${project_directory} does not exist" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
	  exit 1;
fi

###########################################################################################
## initiate projects 0-0-1
###########################################################################################

if [[ "${initiate_project}" -eq "1" ]]
then
    logger_ngseasy "[ngseasy]:Calling ngseasy_initiate_project"  ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
    /bin/bash ngseasy_initiate_project -c ${config_tsv} -d ${project_directory}

else
   logger_ngseasy  "[ngseasy]:Assuming ngseasy_initiate_project already run. Project and Sample directories exist" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
fi


###########################################################################################
## initiate fastq files 0-0-2
###########################################################################################
# copy or move fastq files to project directories 

if [[ "${set_fastq}" -eq "1" ]]
then
    logger_ngseasy  "[ngseasy]:Calling ngseasy_initiate_fastq" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
    logger_ngseasy  "[ngseasy]:[cmd]:ngseasy_initiate_fastq -c ${config_tsv} -d ${project_directory}" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
    /bin/bash ngseasy_initiate_fastq -c ${config_tsv} -d ${project_directory}

else
    logger_ngseasy "[ngseasy]:Assuming ngseasy_initiate_fastq already run (or not)" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
    logger_ngseasy "[ngseasy]:Assuming fastq files exist and that they are in the right directories....dont worry, ngseasy will check later and tell ya" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
    logger_ngseasy "[ngseasy]:You cant run NGS without the raw fastq files..." ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
fi
echo -e "\n----------------------------------\n"	
###########################################################################################
## FastQC
###########################################################################################

logger_ngseasy "[ngseasy]:START ngseasy_fastqc" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 

## check ${config_tsv}. is this a batch file or the orginal config file 
#
logger_ngseasy "[ngseasy]:Checking [${config_tsv}] format" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}

hasheader=`sed 1q ${config_tsv} | grep POJECT_ID | wc -l | awk '{print $1}'`

if [[ "${config_tsv}" == *.batch.* ]]
then
	logger_ngseasy "[ngseasy]:[${config_tsv}] is a BACTH file ie a subset of the original config file" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
	FILE=${config_tsv}

## if header present then remove it
elif [[ "$hasheader" -eq 1 ]]
then
	logger_ngseasy "[ngseasy]:[${config_tsv}] header present...gonna remove this" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
	logger_ngseasy "[ngseasy]:[cmd]:sed 1d ${config_tsv} > ${config_tsv}.tmp" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
	sed 1d ${config_tsv} > ${config_tsv}.tmp
	FILE=${config_tsv}.tmp
else
	logger_ngseasy "[ngseasy]:[${config_tsv}] is seemingly perfect. Well Done" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
	FILE=${config_tsv}
fi

## number of samples to run ####
#
numsamples=`wc -l ${config_tsv}.tmp | awk '{print $1}'`  
logger_ngseasy "[ngseasy]:Number of samples [$numsamples]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 

## number of cores available
# mincpuallowed=8
numcores=`nproc`
logger_ngseasy "[ngseasy]:Number of available cores [$numcores]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 

## check if number of cpu less than 2 and exit if so ####
#
if [[ "$numcores" -lt 2 ]]; then
	logger_ngseasy "[ngseasy]:Number of available cores less than 2. Exiting " ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 
	exit 1;
fi

## muber of jobs fastqc calls allowed to run at the same time ####
#
numjobsallowed=$(expr $numcores / 2)
logger_ngseasy "[ngseasy]:Number of FastQC Jobs allowed [$numjobsallowed] ie 2 cores per sample" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 

## split config file into batches : N samples per batch. N samples == njobs
#
if [[ "$numsamples"  -gt "$numjobsallowed" ]]; then
	logger_ngseasy "[ngseasyc]:Number samples [$numsamples] greater than number of cpu jobs allowed [$numjobsallowed]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 
	logger_ngseasy "[ngseasy]:splitting config file in to batches of at most [${numjobsallowed}] samples" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 
	logger_ngseasy "[ngseasy]:[cmd]:split -d -l ${numjobsallowed} --additional-suffix=\".batch.config.tmp\" ${config_tsv}.tmp" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 
	split -d -l ${numjobsallowed} --additional-suffix=".batch.${config_tsv}.tmp" ${config_tsv}.tmp
else
	logger_ngseasy "[ngseasy]:Number of jobs to run [$numsamples]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 
	logger_ngseasy "[ngseasy]:making [original.batch.${config_tsv}.tmp]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 
	cp -v ${config_tsv}.tmp original.batch.${config_tsv}.tmp
fi

## get file names to process ####
#
logger_ngseasy "[ngseasy]: Getting config file names to process " ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 
batchfiles=`ls | grep batch` 

## set num running jobs counter to 0 ####
#
ndockerjobs=0

## loop through config files and run fastqc ####
#
echo -e "\n----------------------------------\n"
logger_ngseasy "[ngseasy]:START FASTQC LOOP" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 

for MYBATCH in `ls $batchfiles`
do
	logger_ngseasy "[ngseasy]:[cmd]:ngseasy_fastqc -c ${MYBATCH} -d ${project_directory}" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 

## call ngseasy_fastqc ####
#
logger_ngseasy "[ngseasy]:Calling ngseasy_fastqc" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}

	/bin/bash ngseasy_fastqc -c ${MYBATCH} -d ${project_directory};

## get number of jobs running in background
#
ndockerjobs=`docker ps -a | grep fastqc | grep Up | wc -l`;

logger_ngseasy "[ngseasy]:Number of Docker FastQC jobs started [$ndockerjobs]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}

## while jobs still running ie not equal to 0 then sleep for 10 seconds ####
#
logger_ngseasy "[ngseasy]:Checking for the number of running Docker FastQC jobs every 1 minute" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
logger_ngseasy "[ngseasy]:When the number of running Docker FastQC jobs hits [0], the next batch will begin" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
logger_ngseasy "[ngseasy]:Number of Docker FastQC jobs running [$ndockerjobs]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
echo -e "\n----------------------------------\n"
while [ $ndockerjobs -gt 0 ]; do
	sleep 60s;
	ndockerjobs=`docker ps -a | grep fastqc | grep Up | wc -l`;
	logger_ngseasy "[ngseasy]:Number of Docker FastQC jobs running [$ndockerjobs]" 
done
done

## log the end ####
#
logger_ngseasy "[ngseasy]:END FASTQC LOOP" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 
echo -e "\n----------------------------------\n"
## remove docker Exited containers ####
#
logger_ngseasy "[ngseasy]:cleaning up container images" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}	
logger_ngseasy "[ngseasy]:[cmd]:docker rm -f \$(docker ps -a | grep fastqc  | grep Exited | awk '{print \$1}')" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
docker rm -f $(docker ps -a | grep fastqc  | grep Exited | awk '{print $1}')

logger_ngseasy "[ngseasy]:END ngseasy_fastqc" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE} 

echo -e "\n----------------------------------\n"
###################################################################################
## Quality Trimming
###################################################################################

## check if ngseasy_fastqc still running and wait before running ngseasy_trimmomatic
#
logger_ngseasy "[ngseasy]:check if ngseasy_fastqc still running and wait before running ngseasy_trimmomatic"

running_fastq_jobs=`docker ps -a | grep fastqc | grep Up | wc -l`

while [ $running_fastq_jobs -gt 0 ]; do
	sleep 10s;
	running_fastq_jobs=`docker ps -a | grep fastqc | grep Up | wc -l`;
	logger_ngseasy "[ngseasy]:Number of Docker FastQC jobs running [$running_fastq_jobs]" 
done
echo -e "\n----------------------------------\n"
## call ngseasy_trimmomatic
#
logger_ngseasy "[ngseasy]:Calling ngseasy_trimmomatic" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}

	/bin/bash ngseasy_trimmomatic -c ${config_tsv} -d ${project_directory}

echo -e "\n----------------------------------\n"	
###################################################################################
## Alignment 
###################################################################################

## check if ngseasy_trimmomatic still running and wait before running ngseasy_alignment
#
logger_ngseasy "[ngseasy]:check if ngseasy_trimmomatic still running and wait before running ngseasy_alignment"

running_trimmomatic_jobs=`docker ps -a | grep trimmomatic | grep Up | wc -l`

while [ $running_trimmomatic_jobs -gt 0 ]; do
	sleep 10s;
	running_trimmomatic_jobs=`docker ps -a | grep trimmomatic | grep Up | wc -l`;
	logger_ngseasy "[ngseasy]:Number of Docker Trimmomatic jobs running [$running_trimmomatic_jobs]" 
done
echo -e "\n----------------------------------\n"
## call ngseasy_alignment
#
logger_ngseasy  "[ngseasy]:Calling ngseasy_alignment"  ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}

#  /bin/bash ngseasy_alignment -c ${config_tsv} -d ${project_directory}
echo -e "\n----------------------------------\n"
###################################################################################
## Indel realignment 
###################################################################################
#logger_ngseasy "[ngseasy]:check if ngseasy_alignment still running and wait before running ngseasy_realn"

#running_alignment_jobs=`docker ps -a | grep alignment | grep Up | wc -l`

#while [ $running_alignment_jobs -gt 0 ]; do
#  sleep 10s;
#  running_alignment_jobs=`docker ps -a | grep alignment | grep Up | wc -l`;
#  logger_ngseasy "[ngseasy]:Number of Docker Alignmnet jobs running [$running_alignment_jobs]" 
#done

#logger_ngseasy  "[ngseasy]:Calling ngseasy_realn"  ${HOME}/ngseasy_logs/ngseasy.${cnfig_tsv}.${RUNDATE}
#	/bin/bash ngseasy_realn  -c ${config_tsv} -d ${project_directory}

###################################################################################
## Base Quality Score Recalibration
###################################################################################

#logger_ngseasy  "[ngseasy]:Calling ngseasy_bsqr"  ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
#	/bin/bash ngseasy_bsqr -c ${config_tsv} -d ${project_directory}

###################################################################################
## Alignment statistics
###################################################################################

#logger_ngseasy  "[ngseasy]:Calling ngseasy_alignment_qc"  ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
#	/bin/bash ngseasy_alignment_qc -c ${config_tsv} -d ${project_directory}

###################################################################################
## Variant calling
###################################################################################
#logger_ngseasy  "[ngseasy]:Calling ngseasy_variant_calling"  ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
#	/bin/bash ngseasy_variant_calling -c ${config_tsv} -d ${project_directory}

###################################################################################
## CNV Calling: coming soon
###################################################################################

###################################################################################
## Annotation: coming soon
###################################################################################

###################################################################################
## NGS Report: coming soon
###################################################################################

